#!/bin/bash
# vim:ts=4:sw=4:sts=4:et:ai

procfilename='/proc/sys/kernel/unprivileged_bpf_disabled'

VERBOSE=1
REPORT=1

# Parse arguments
for arg in "$@"
do
    case "$arg" in
        '-v')
            VERBOSE=$(( $VERBOSE + 1 ))
            ;;
        '-q')
            REPORT=0
            VERBOSE=0
            ;;
        '-f')
            FIX=1
            ;;
        '-r')
            REPORT=1
            ;;
        *)
            echo "Ignoring unknown argument '$arg'" >&2
            ;;
    esac
done

# Echo if verbose is set to at least v
# echo_v(1, "Something wierd");
function echo_v {
    [ $VERBOSE -lt $1 ] && return 0
    echo $@
}

function softclose {
    if $( echo 2 > $procfilename 2>/dev/null )
    then
        echo_v 2 Closed
    else
        echo_v 2 Closing failed: $!
        return 1
    fi
    return 0
}

function hardclose {
    if $( echo 1 > $procfilename 2>/dev/null )
    then
        echo_v 2 Closed
    else
        echo_v 2 Closing failed: $!
        return 1
    fi
    return 0
}

# check if kernel is x.y or higher
function check_min_kernel_version {
    major_min=$1
    minor_min=$2

    kernelver=$(uname -r)
    regex='([0-9]+)\.([0-9]+)\.([0-9]+)\-([0-9]+)\-([0-9a-zA-Z]+)'
    [[ $kernelver =~ $regex ]]

    echo Kernel version is ${BASH_REMATCH[1]}.${BASH_REMATCH[2]}.${BASH_REMATCH[3]}-${BASH_REMATCH[4]}.${BASH_REMATCH[5]}
    kernel_major=${BASH_REMATCH[1]}
    kernel_minor=${BASH_REMATCH[2]}

    if [ $kernel_major -lt $major_min ]
    then
        return 1
    fi
    if [ $kernel_minor -lt $minor_min ]
    then
        return 1
    fi
    return 0
}

# Start of Main Fun(tm)
if check_min_kernel_version 5 8
then
    echo "We have a valid kernel!"
else
    echo "Too old kernel"
    exit 0
fi


status=$( cat $procfilename )

case "$status" in
    0)
        echo_v 1 "It's all open - closing down to 2 (soft close)"
        if softclose
        then
            echo_v 1 "Closed soft - this can be reopened from $procfilename"
        else
            echo_v 2 "try hardclose"
            if hardclose
            then
                echo_v 1 "Closed hard - this can only be reopened with a reboot"
            fi
        fi
        ;;
    1)
        echo "It's all closed - hard\n"
        ;;
    2)
        echo "It's all closed - soft\n"
        ;;
    *)
        echo "This [$status] is all greek to me\n" >&2
        exit 1
        ;;
esac

